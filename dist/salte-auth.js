/**
 * salte-auth JavaScript Library v1.0.19
 *
 * @license MIT (https://github.com/salte-io/salte-auth/blob/master/LICENSE)
 *
 * Made with â™¥ by Ceci <admin@cecilias.me>, Dave Woodward <dave@salte.io>
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("salte-auth", [], factory);
	else if(typeof exports === 'object')
		exports["salte-auth"] = factory();
	else
		root["salte-auth"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!**************************************!*\
  !*** ../~/webpack/buildin/global.js ***!
  \**************************************/
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanM/NjJhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!************************************!*\
  !*** ../~/uuid/lib/bytesToUuid.js ***!
  \************************************/
/***/ (function(module, exports) {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L3V1aWQvbGliL2J5dGVzVG9VdWlkLmpzPzI4ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4W2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTtcbn1cblxuZnVuY3Rpb24gYnl0ZXNUb1V1aWQoYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBvZmZzZXQgfHwgMDtcbiAgdmFyIGJ0aCA9IGJ5dGVUb0hleDtcbiAgcmV0dXJuICBidGhbYnVmW2krK11dICsgYnRoW2J1ZltpKytdXSArXG4gICAgICAgICAgYnRoW2J1ZltpKytdXSArIGJ0aFtidWZbaSsrXV0gKyAnLScgK1xuICAgICAgICAgIGJ0aFtidWZbaSsrXV0gKyBidGhbYnVmW2krK11dICsgJy0nICtcbiAgICAgICAgICBidGhbYnVmW2krK11dICsgYnRoW2J1ZltpKytdXSArICctJyArXG4gICAgICAgICAgYnRoW2J1ZltpKytdXSArIGJ0aFtidWZbaSsrXV0gKyAnLScgK1xuICAgICAgICAgIGJ0aFtidWZbaSsrXV0gKyBidGhbYnVmW2krK11dICtcbiAgICAgICAgICBidGhbYnVmW2krK11dICsgYnRoW2J1ZltpKytdXSArXG4gICAgICAgICAgYnRoW2J1ZltpKytdXSArIGJ0aFtidWZbaSsrXV07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYnl0ZXNUb1V1aWQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3V1aWQvbGliL2J5dGVzVG9VdWlkLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!************************************!*\
  !*** ../~/uuid/lib/rng-browser.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L3V1aWQvbGliL3JuZy1icm93c2VyLmpzP2ExOWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVW5pcXVlIElEIGNyZWF0aW9uIHJlcXVpcmVzIGEgaGlnaCBxdWFsaXR5IHJhbmRvbSAjIGdlbmVyYXRvci4gIEluIHRoZVxuLy8gYnJvd3NlciB0aGlzIGlzIGEgbGl0dGxlIGNvbXBsaWNhdGVkIGR1ZSB0byB1bmtub3duIHF1YWxpdHkgb2YgTWF0aC5yYW5kb20oKVxuLy8gYW5kIGluY29uc2lzdGVudCBzdXBwb3J0IGZvciB0aGUgYGNyeXB0b2AgQVBJLiAgV2UgZG8gdGhlIGJlc3Qgd2UgY2FuIHZpYVxuLy8gZmVhdHVyZS1kZXRlY3Rpb25cbnZhciBybmc7XG5cbnZhciBjcnlwdG8gPSBnbG9iYWwuY3J5cHRvIHx8IGdsb2JhbC5tc0NyeXB0bzsgLy8gZm9yIElFIDExXG5pZiAoY3J5cHRvICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgLy8gV0hBVFdHIGNyeXB0byBSTkcgLSBodHRwOi8vd2lraS53aGF0d2cub3JnL3dpa2kvQ3J5cHRvXG4gIHZhciBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTtcbiAgcm5nID0gZnVuY3Rpb24gd2hhdHdnUk5HKCkge1xuICAgIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMocm5kczgpO1xuICAgIHJldHVybiBybmRzODtcbiAgfTtcbn1cblxuaWYgKCFybmcpIHtcbiAgLy8gTWF0aC5yYW5kb20oKS1iYXNlZCAoUk5HKVxuICAvL1xuICAvLyBJZiBhbGwgZWxzZSBmYWlscywgdXNlIE1hdGgucmFuZG9tKCkuICBJdCdzIGZhc3QsIGJ1dCBpcyBvZiB1bnNwZWNpZmllZFxuICAvLyBxdWFsaXR5LlxuICB2YXIgIHJuZHMgPSBuZXcgQXJyYXkoMTYpO1xuICBybmcgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgcjsgaSA8IDE2OyBpKyspIHtcbiAgICAgIGlmICgoaSAmIDB4MDMpID09PSAwKSByID0gTWF0aC5yYW5kb20oKSAqIDB4MTAwMDAwMDAwO1xuICAgICAgcm5kc1tpXSA9IHIgPj4+ICgoaSAmIDB4MDMpIDw8IDMpICYgMHhmZjtcbiAgICB9XG5cbiAgICByZXR1cm4gcm5kcztcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBybmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3V1aWQvbGliL3JuZy1icm93c2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!**************************!*\
  !*** ../~/uuid/index.js ***!
  \**************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var v1 = __webpack_require__(/*! ./v1 */ 4);\nvar v4 = __webpack_require__(/*! ./v4 */ 5);\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L3V1aWQvaW5kZXguanM/MTg1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdjEgPSByZXF1aXJlKCcuL3YxJyk7XG52YXIgdjQgPSByZXF1aXJlKCcuL3Y0Jyk7XG5cbnZhciB1dWlkID0gdjQ7XG51dWlkLnYxID0gdjE7XG51dWlkLnY0ID0gdjQ7XG5cbm1vZHVsZS5leHBvcnRzID0gdXVpZDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL34vdXVpZC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!***********************!*\
  !*** ../~/uuid/v1.js ***!
  \***********************/
/***/ (function(module, exports, __webpack_require__) {

eval("// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = __webpack_require__(/*! ./lib/rng */ 2);\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ 1);\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L3V1aWQvdjEuanM/ZGUxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiAgV2UgZmVhdHVyZVxuLy8gZGV0ZWN0IHRvIGRldGVybWluZSB0aGUgYmVzdCBSTkcgc291cmNlLCBub3JtYWxpemluZyB0byBhIGZ1bmN0aW9uIHRoYXRcbi8vIHJldHVybnMgMTI4LWJpdHMgb2YgcmFuZG9tbmVzcywgc2luY2UgdGhhdCdzIHdoYXQncyB1c3VhbGx5IHJlcXVpcmVkXG52YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbi8vIHJhbmRvbSAjJ3Mgd2UgbmVlZCB0byBpbml0IG5vZGUgYW5kIGNsb2Nrc2VxXG52YXIgX3NlZWRCeXRlcyA9IHJuZygpO1xuXG4vLyBQZXIgNC41LCBjcmVhdGUgYW5kIDQ4LWJpdCBub2RlIGlkLCAoNDcgcmFuZG9tIGJpdHMgKyBtdWx0aWNhc3QgYml0ID0gMSlcbnZhciBfbm9kZUlkID0gW1xuICBfc2VlZEJ5dGVzWzBdIHwgMHgwMSxcbiAgX3NlZWRCeXRlc1sxXSwgX3NlZWRCeXRlc1syXSwgX3NlZWRCeXRlc1szXSwgX3NlZWRCeXRlc1s0XSwgX3NlZWRCeXRlc1s1XVxuXTtcblxuLy8gUGVyIDQuMi4yLCByYW5kb21pemUgKDE0IGJpdCkgY2xvY2tzZXFcbnZhciBfY2xvY2tzZXEgPSAoX3NlZWRCeXRlc1s2XSA8PCA4IHwgX3NlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG5cbi8vIFByZXZpb3VzIHV1aWQgY3JlYXRpb24gdGltZVxudmFyIF9sYXN0TVNlY3MgPSAwLCBfbGFzdE5TZWNzID0gMDtcblxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9icm9vZmEvbm9kZS11dWlkIGZvciBBUEkgZGV0YWlsc1xuZnVuY3Rpb24gdjEob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBidWYgJiYgb2Zmc2V0IHx8IDA7XG4gIHZhciBiID0gYnVmIHx8IFtdO1xuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIHZhciBjbG9ja3NlcSA9IG9wdGlvbnMuY2xvY2tzZXEgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuY2xvY2tzZXEgOiBfY2xvY2tzZXE7XG5cbiAgLy8gVVVJRCB0aW1lc3RhbXBzIGFyZSAxMDAgbmFuby1zZWNvbmQgdW5pdHMgc2luY2UgdGhlIEdyZWdvcmlhbiBlcG9jaCxcbiAgLy8gKDE1ODItMTAtMTUgMDA6MDApLiAgSlNOdW1iZXJzIGFyZW4ndCBwcmVjaXNlIGVub3VnaCBmb3IgdGhpcywgc29cbiAgLy8gdGltZSBpcyBoYW5kbGVkIGludGVybmFsbHkgYXMgJ21zZWNzJyAoaW50ZWdlciBtaWxsaXNlY29uZHMpIGFuZCAnbnNlY3MnXG4gIC8vICgxMDAtbmFub3NlY29uZHMgb2Zmc2V0IGZyb20gbXNlY3MpIHNpbmNlIHVuaXggZXBvY2gsIDE5NzAtMDEtMDEgMDA6MDAuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuICAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG4gIHZhciBuc2VjcyA9IG9wdGlvbnMubnNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubnNlY3MgOiBfbGFzdE5TZWNzICsgMTtcblxuICAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG4gIHZhciBkdCA9IChtc2VjcyAtIF9sYXN0TVNlY3MpICsgKG5zZWNzIC0gX2xhc3ROU2VjcykvMTAwMDA7XG5cbiAgLy8gUGVyIDQuMi4xLjIsIEJ1bXAgY2xvY2tzZXEgb24gY2xvY2sgcmVncmVzc2lvblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9XG5cbiAgLy8gUmVzZXQgbnNlY3MgaWYgY2xvY2sgcmVncmVzc2VzIChuZXcgY2xvY2tzZXEpIG9yIHdlJ3ZlIG1vdmVkIG9udG8gYSBuZXdcbiAgLy8gdGltZSBpbnRlcnZhbFxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfVxuXG4gIC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcbiAgaWYgKG5zZWNzID49IDEwMDAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1dWlkLnYxKCk6IENhblxcJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjJyk7XG4gIH1cblxuICBfbGFzdE1TZWNzID0gbXNlY3M7XG4gIF9sYXN0TlNlY3MgPSBuc2VjcztcbiAgX2Nsb2Nrc2VxID0gY2xvY2tzZXE7XG5cbiAgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG4gIG1zZWNzICs9IDEyMjE5MjkyODAwMDAwO1xuXG4gIC8vIGB0aW1lX2xvd2BcbiAgdmFyIHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjtcblxuICAvLyBgdGltZV9taWRgXG4gIHZhciB0bWggPSAobXNlY3MgLyAweDEwMDAwMDAwMCAqIDEwMDAwKSAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjtcblxuICAvLyBgdGltZV9oaWdoX2FuZF92ZXJzaW9uYFxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmO1xuXG4gIC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7XG5cbiAgLy8gYGNsb2NrX3NlcV9sb3dgXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjtcblxuICAvLyBgbm9kZWBcbiAgdmFyIG5vZGUgPSBvcHRpb25zLm5vZGUgfHwgX25vZGVJZDtcbiAgZm9yICh2YXIgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmID8gYnVmIDogYnl0ZXNUb1V1aWQoYik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdjE7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3V1aWQvdjEuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!***********************!*\
  !*** ../~/uuid/v4.js ***!
  \***********************/
/***/ (function(module, exports, __webpack_require__) {

eval("var rng = __webpack_require__(/*! ./lib/rng */ 2);\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ 1);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9+L3V1aWQvdjQuanM/NDJlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm5nID0gcmVxdWlyZSgnLi9saWIvcm5nJyk7XG52YXIgYnl0ZXNUb1V1aWQgPSByZXF1aXJlKCcuL2xpYi9ieXRlc1RvVXVpZCcpO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcblxuICBpZiAodHlwZW9mKG9wdGlvbnMpID09ICdzdHJpbmcnKSB7XG4gICAgYnVmID0gb3B0aW9ucyA9PSAnYmluYXJ5JyA/IG5ldyBBcnJheSgxNikgOiBudWxsO1xuICAgIG9wdGlvbnMgPSBudWxsO1xuICB9XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIHZhciBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTtcblxuICAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG4gIHJuZHNbNl0gPSAocm5kc1s2XSAmIDB4MGYpIHwgMHg0MDtcbiAgcm5kc1s4XSA9IChybmRzWzhdICYgMHgzZikgfCAweDgwO1xuXG4gIC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuICBpZiAoYnVmKSB7XG4gICAgZm9yICh2YXIgaWkgPSAwOyBpaSA8IDE2OyArK2lpKSB7XG4gICAgICBidWZbaSArIGlpXSA9IHJuZHNbaWldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBidWYgfHwgYnl0ZXNUb1V1aWQocm5kcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdjQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9+L3V1aWQvdjQuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!***********************!*\
  !*** ./salte-auth.js ***!
  \***********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\npublic\nclass Config\nproperty {string} url                 Required.  This is the base url for the identity provider's authorize and token endpoint; not including the word authorize or token.\nproperty {string} extraQueryParameter Optional.  Value to be included as an additional query parameter when calling the identity provider's authorize and token endpoints.  Should be formatted as \"name=value\".\nproperty {string} responseType        Optional; defaults to id_token.  OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used.\nproperty {string} clientId            Required.  OAuth 2.0 Client Identifier valid at the Authorization Server.\nproperty {string} scope               Optional.  This may be used to define the specific authorization(s) being requested from the resource owner.\nproperty {string} redirectUri         Optional; defaults to current window location.  Redirection URI to which the response will be sent. This URI MUST exactly match one of the Redirection URI values for the Client pre-registered at the OpenID Provider.\nproperty {string} loginResource       Optional; defaults to clientId.\nproperty {object} securedEndpoints    Optional.  Object containing one or more named endpoints (e.g. { \"Endpoint\": \"ResourceId\" }).  This list is used to identify endpoints to which tokens should be attached.  If \"Endpoint\" exists anywhere within the endpoint being called then it is considered to be a match.  If the endpoint being called doesn't match then either no token will be passed or, if the endpoint's hostname matches the application hostname, then the id_token will be passed.\nproperty {Array} anonymousEndpoints   Optional.  Array containing one or more endpoints to which a token need not be attached.  If the endpoint specified exists anywhere within the endpoint being called then it is considered to be a match.\nproperty {boolean} isAngular          Optional.  Used to tell this library whether it should handle the callback from the authorization server itself or bubble the response up to the main window's URL and let the Angular http interceptor handle it.\nproperty {function} displayCall       Optional.  If specified then this function will be called with the fully-formed authorization url when login is invoked.\nproperty {boolean} popUp              Optional; defaults to true.\nproperty {function} callback          Optional.  If specified then this function will be called upon receiving a successful response or error from the authorization server.\nproperty {string} hashPrefix          Optional; defaults to empty string.\nproperty {string} tokenCallbackTimeout Optional; defaults to 6 seconds.  This is the amount of time salte-auth will wait for the identity provider's token endpoint to respond.\nn\n/**\n * User information from idtoken.\n *  @class User\n *  @property {string} userName - username assigned from upn, email, or sub (i.e. subject).\n *  @property {object} profile - properties parsed from idtoken.\n */\n\nvar _uuid = __webpack_require__(/*! uuid */ 3);\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AuthenticationContext = function () {\n  /**\n   * Creates a new AuthenticationContext object.\n   * @constructor\n   * @param {object}  config               Configuration options for AuthenticationContext\n   */\n  function AuthenticationContext(config) {\n    _classCallCheck(this, AuthenticationContext);\n\n    /**\n    * Enum for request type\n    * @enum {string}\n    */\n    this.REQUEST_TYPE = {\n      LOGIN: 'LOGIN',\n      RENEW_TOKEN: 'RENEW_TOKEN',\n      UNKNOWN: 'UNKNOWN'\n    };\n\n    /**\n    * Enum for storage constants\n    * @enum {string}\n    */\n    this.CONSTANTS = {\n      ACCESS_TOKEN: 'access_token',\n      EXPIRES_IN: 'expires_in',\n      ID_TOKEN: 'id_token',\n      ERROR_DESCRIPTION: 'error_description',\n      SESSION_STATE: 'session_state',\n      STORAGE: {\n        TOKEN_KEYS: 'auth.token.keys',\n        ACCESS_TOKEN_KEY: 'auth.access.token.key',\n        EXPIRATION_KEY: 'auth.expiration.key',\n        STATE_LOGIN: 'auth.state.login',\n        STATE_RENEW: 'auth.state.renew',\n        NONCE_IDTOKEN: 'auth.nonce.idtoken',\n        SESSION_STATE: 'auth.session.state',\n        USERNAME: 'auth.username',\n        IDTOKEN: 'auth.idtoken',\n        ERROR: 'auth.error',\n        ERROR_DESCRIPTION: 'auth.error.description',\n        LOGIN_REQUEST: 'auth.login.request',\n        LOGIN_ERROR: 'auth.login.error',\n        RENEW_STATUS: 'auth.token.renew.status'\n      },\n      RESOURCE_DELIMETER: '|',\n      LOADFRAME_TIMEOUT: '6000',\n      TOKEN_RENEW_STATUS_CANCELED: 'Canceled',\n      TOKEN_RENEW_STATUS_COMPLETED: 'Completed',\n      TOKEN_RENEW_STATUS_IN_PROGRESS: 'In Progress',\n      LOGGING_LEVEL: {\n        ERROR: 0,\n        WARN: 1,\n        INFO: 2,\n        VERBOSE: 3\n      },\n      LEVEL_STRING_MAP: {\n        0: 'ERROR:',\n        1: 'WARNING:',\n        2: 'INFO:',\n        3: 'VERBOSE:'\n      },\n      POPUP_WIDTH: 483,\n      POPUP_HEIGHT: 600\n    };\n\n    if (window.AuthenticationContext) {\n      return window.AuthenticationContext;\n    }\n    window.AuthenticationContext = this;\n\n    // public\n    this.config = {};\n    this.callback = null;\n    this.popUp = false;\n    this.isAngular = false;\n\n    // private\n    this._user = null;\n    this._activeRenewals = {};\n    this._loginInProgress = false;\n    this._renewStates = [];\n\n    this.callBackMappedToRenewStates = {};\n    this.callBacksMappedToRenewStates = {};\n\n    // validate before constructor assignments\n    if (config.displayCall && typeof config.displayCall !== 'function') {\n      throw new Error('displayCall is not a function');\n    }\n\n    if (!config.clientId) {\n      throw new Error('clientId is required');\n    }\n\n    if (!config.url || !config.url.match(/^https:\\/\\/.*\\/$/)) {\n      throw new Error('url must be a valid https endpoint that ends in a forward slash.');\n    }\n\n    this.config = this._cloneConfig(config);\n\n    if (this.config.popUp) {\n      this.popUp = true;\n    }\n\n    if (this.config.callback && typeof this.config.callback === 'function') {\n      this.callback = this.config.callback;\n    }\n\n    // App can request idtoken for itself using clientid as resource\n    if (!this.config.loginResource) {\n      this.config.loginResource = this.config.clientId;\n    }\n\n    if (!this.config.redirectUri) {\n      this.config.redirectUri = window.location.href;\n    }\n\n    if (!this.config.anonymousEndpoints) {\n      this.config.anonymousEndpoints = [];\n    }\n\n    if (this.config.isAngular) {\n      this.isAngular = this.config.isAngular;\n    }\n\n    this.setResponseType(this.config.responseType);\n\n    if (this._isEmpty(this.config.hashPrefix)) {\n      this.config.hashPrefix = '';\n    }\n\n    if (this._isEmpty(this.config.tokenCallbackTimeout)) {\n      this.config.tokenCallbackTimeout = this.CONSTANTS.LOADFRAME_TIMEOUT;\n    }\n  }\n\n  _createClass(AuthenticationContext, [{\n    key: 'setResponseType',\n    value: function setResponseType(responseType) {\n      this.config.responseType = responseType || this.CONSTANTS.ID_TOKEN;\n    }\n\n    /**\n     * Gets initial Idtoken for the app backend\n     * Saves the resulting Idtoken in localStorage.\n     * @param {string} startPage the start page\n     */\n\n  }, {\n    key: 'login',\n    value: function login(startPage) {\n      // Token is not present and user needs to login\n      if (this._loginInProgress) {\n        this.info('Login in progress');\n        return;\n      }\n      var expectedState = _uuid2.default.v4();\n      this.config.state = expectedState;\n      this._idTokenNonce = _uuid2.default.v4();\n      if (!startPage) {\n        startPage = window.location;\n      }\n      this.verbose('Expected state: ' + expectedState + ' startPage:' + startPage);\n      this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, startPage);\n      this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\n      this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, expectedState);\n      this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce);\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\n      var urlNavigate = this._getNavigateUrl(this.config.responseType, null) + '&nonce=' + encodeURIComponent(this._idTokenNonce);\n      this._loginInProgress = true;\n      if (this.popUp) {\n        this._loginPopup(urlNavigate);\n        return;\n      }\n      if (this.config.displayCall) {\n        // User defined way of handling the navigation\n        this.config.displayCall(urlNavigate);\n      } else {\n        this.promptUser(urlNavigate);\n      }\n    }\n  }, {\n    key: '_openPopup',\n    value: function _openPopup(urlNavigate, title, popUpWidth, popUpHeight) {\n      try {\n        /**\n        * adding winLeft and winTop to account for dual monitor\n        * using screenLeft and screenTop for IE8 and earlier\n        */\n        var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        var winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n        * window.innerWidth displays browser window's height and width excluding toolbars\n        * using document.documentElement.clientWidth for IE8 and earlier\n        */\n        var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        var left = width / 2 - popUpWidth / 2 + winLeft;\n        var top = height / 2 - popUpHeight / 2 + winTop;\n\n        var popupWindow = this.open(urlNavigate, title, 'width=' + popUpWidth + ', height=' + popUpHeight + ', top=' + top + ', left=' + left);\n        if (popupWindow.focus) {\n          popupWindow.focus();\n        }\n        return popupWindow;\n      } catch (e) {\n        this.warn('Error opening popup, ' + e.message);\n        this._loginInProgress = false;\n        return null;\n      }\n    }\n  }, {\n    key: '_loginPopup',\n    value: function _loginPopup(urlNavigate) {\n      var _this = this;\n\n      var popupWindow = this._openPopup(urlNavigate, 'login', this.CONSTANTS.POPUP_WIDTH, this.CONSTANTS.POPUP_HEIGHT);\n      if (popupWindow === null) {\n        this.warn('Popup Window is null. This can happen if you are using IE');\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'Error opening popup');\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Popup Window is null. This can happen if you are using IE');\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, 'Popup Window is null. This can happen if you are using IE');\n        if (this.callback) {\n          this.callback(this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR), null);\n        }\n        return;\n      }\n      var registeredRedirectUri = void 0;\n      if (this.config.redirectUri.indexOf('#') === -1) {\n        registeredRedirectUri = this.config.redirectUri;\n      } else {\n        registeredRedirectUri = this.config.redirectUri.split('#')[0];\n      }\n      var pollTimer = window.setInterval(function () {\n        if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\n          _this._loginInProgress = false;\n          window.clearInterval(pollTimer);\n        }\n        try {\n          if (popupWindow.location.href.indexOf(registeredRedirectUri) !== -1) {\n            if (_this.isAngular) {\n              window.location.hash = popupWindow.location.hash;\n              _this.callback && _this.callback();\n            } else {\n              _this.handleWindowCallback(popupWindow.location.hash, popupWindow.location.search);\n            }\n            window.clearInterval(pollTimer);\n            _this._loginInProgress = false;\n            _this.info('Closing popup window');\n            popupWindow.close();\n          }\n        } catch (e) {}\n      }, 20);\n    }\n  }, {\n    key: 'loginInProgress',\n    value: function loginInProgress() {\n      return this._loginInProgress;\n    }\n  }, {\n    key: '_hasResource',\n    value: function _hasResource(key) {\n      var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\n      return keys && !this._isEmpty(keys) && keys.indexOf(key + this.CONSTANTS.RESOURCE_DELIMETER) > -1;\n    }\n\n    /**\n     * Gets token for the specified resource from local storage cache\n     * @param {string}   resource A URI that identifies the resource for which the token is valid.\n     * @return {string} token if exists and not expired or null\n     */\n\n  }, {\n    key: 'getCachedToken',\n    value: function getCachedToken(resource) {\n      if (!this._hasResource(resource)) {\n        return null;\n      }\n\n      var token = this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource);\n      var expired = this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource);\n\n      // If expiration is within offset, it will force renew\n      var offset = this.config.expireOffsetSeconds || 120;\n\n      if (expired && expired > this._now() + offset) {\n        return token;\n      }\n      this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\n      this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\n      return null;\n    }\n\n    /**\n     * Retrieves and parse idToken from localstorage\n     * @return {User} user object\n     */\n\n  }, {\n    key: 'getCachedUser',\n    value: function getCachedUser() {\n      if (this._user) {\n        return this._user;\n      }\n\n      var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\n      this._user = this._createUser(idtoken);\n      return this._user;\n    }\n  }, {\n    key: 'registerCallback',\n    value: function registerCallback(expectedState, resource, callback) {\n      var _this2 = this;\n\n      this._activeRenewals[resource] = expectedState;\n      if (!this.callBacksMappedToRenewStates[expectedState]) {\n        this.callBacksMappedToRenewStates[expectedState] = [];\n      }\n      this.callBacksMappedToRenewStates[expectedState].push(callback);\n      if (!this.callBackMappedToRenewStates[expectedState]) {\n        this.callBackMappedToRenewStates[expectedState] = function (message, token) {\n          for (var i = 0; i < _this2.callBacksMappedToRenewStates[expectedState].length; ++i) {\n            try {\n              _this2.callBacksMappedToRenewStates[expectedState][i](message, token);\n            } catch (error) {\n              _this2.warn(error);\n            }\n          }\n          _this2._activeRenewals[resource] = null;\n          _this2.callBacksMappedToRenewStates[expectedState] = null;\n          _this2.callBackMappedToRenewStates[expectedState] = null;\n        };\n      }\n    }\n\n    /**\n     * Acquires access token with hidden iframe\n     * @param {string} resource  ResourceUri identifying the target resource\n     * @param {string} callback  ResourceUri identifying the target resource\n     */\n\n  }, {\n    key: '_renewToken',\n    value: function _renewToken(resource, callback) {\n      // use iframe to try refresh token\n      // use given resource to create new authz url\n      this.info('renewToken is called for resource:' + resource);\n      var frameHandle = this._addAuthFrame('authRenewFrame' + resource);\n      var expectedState = _uuid2.default.v4() + '|' + resource;\n      this.config.state = expectedState;\n      // renew happens in iframe, so it keeps javascript context\n      this._renewStates.push(expectedState);\n\n      this.verbose('Renew token Expected state: ' + expectedState);\n      var urlNavigate = this._getNavigateUrl('token', resource) + '&prompt=none';\n      urlNavigate = this._addHintParameters(urlNavigate);\n\n      this.registerCallback(expectedState, resource, callback);\n      this.verbose('Navigate to:' + urlNavigate);\n      this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');\n      frameHandle.src = 'about:blank';\n      this._loadFrameTimeout(urlNavigate, 'authRenewFrame' + resource, resource);\n    }\n  }, {\n    key: '_renewIdToken',\n    value: function _renewIdToken(callback) {\n      // use iframe to try refresh token\n      this.info('renewIdToken is called');\n      var frameHandle = this._addAuthFrame('authIdTokenFrame');\n      var expectedState = _uuid2.default.v4() + '|' + this.config.clientId;\n      this._idTokenNonce = _uuid2.default.v4();\n      this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce);\n      this.config.state = expectedState;\n      // renew happens in iframe, so it keeps javascript context\n      this._renewStates.push(expectedState);\n\n      this.verbose('Renew Idtoken Expected state: ' + expectedState);\n      var urlNavigate = this._getNavigateUrl(this.config.responseType, null) + '&prompt=none';\n      urlNavigate = this._addHintParameters(urlNavigate);\n\n      urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\n      this.registerCallback(expectedState, this.config.clientId, callback);\n      this.idTokenNonce = null;\n      this.verbose('Navigate to:' + urlNavigate);\n      this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');\n      frameHandle.src = 'about:blank';\n      this._loadFrameTimeout(urlNavigate, 'authIdTokenFrame', this.config.clientId);\n    }\n  }, {\n    key: '_urlContainsQueryStringParameter',\n    value: function _urlContainsQueryStringParameter(name, url) {\n      // regex to detect pattern of a ? or & followed by the name parameter and an equals character\n      var regex = new RegExp('[\\\\?&]' + name + '=');\n      return regex.test(url);\n    }\n\n    // Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left\n    // registered when network errors occur and subsequent token requests for same resource are registered to the pending request\n\n  }, {\n    key: '_loadFrameTimeout',\n    value: function _loadFrameTimeout(urlNavigation, frameName, resource) {\n      var _this3 = this;\n\n      // set iframe session to pending\n      this.verbose('Set loading state to pending for: ' + resource);\n      this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS);\n      this._loadFrame(urlNavigation, frameName);\n      setTimeout(function () {\n        if (_this3._getItem(_this3.CONSTANTS.STORAGE.RENEW_STATUS + resource) === _this3.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS) {\n          // fail the iframe session if it's in pending state\n          _this3.verbose('Loading frame has timed out after: ' + _this3.config.tokenCallbackTimeout / 1000 + ' seconds for resource ' + resource);\n          var expectedState = _this3._activeRenewals[resource];\n\n          _this3._saveItem(_this3.CONSTANTS.STORAGE.RENEW_STATUS + resource, _this3.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED);\n\n          if (expectedState && _this3.callBackMappedToRenewStates[expectedState]) {\n            _this3.callBackMappedToRenewStates[expectedState]('Token renewal operation failed due to timeout', null);\n          }\n        }\n      }, this.config.tokenCallbackTimeout);\n    }\n  }, {\n    key: '_loadFrame',\n    value: function _loadFrame(urlNavigate, frameName) {\n      var _this4 = this;\n\n      // This trick overcomes iframe navigation in IE\n      // IE does not load the page consistently in iframe\n      this.info('LoadFrame: ' + frameName);\n      var frameCheck = frameName;\n      setTimeout(function () {\n        var frameHandle = _this4._addAuthFrame(frameCheck);\n        if (frameHandle.src === '' || frameHandle.src === 'about:blank') {\n          frameHandle.src = urlNavigate;\n          _this4._loadFrame(urlNavigate, frameCheck);\n        }\n      }, 500);\n    }\n\n    /**\n     * Acquire token from cache if not expired and available. Acquires token from iframe if expired.\n     * @param {string} resource  ResourceUri identifying the target resource\n     * @param {function} callback The callback function\n     */\n\n  }, {\n    key: 'acquireToken',\n    value: function acquireToken(resource, callback) {\n      if (this._isEmpty(resource)) {\n        this.warn('resource is required');\n        callback('resource is required', null);\n        return;\n      }\n\n      var token = this.getCachedToken(resource);\n      if (token) {\n        this.info('Token is already in cache for resource:' + resource);\n        callback(null, token);\n        return;\n      }\n\n      if (!this._user) {\n        this.warn('User login is required');\n        callback('User login is required', null);\n        return;\n      }\n\n      // refresh attept with iframe\n      // Already renewing for this resource, callback when we get the token.\n      if (this._activeRenewals[resource]) {\n        // Active renewals contains the state for each renewal.\n        this.registerCallback(this._activeRenewals[resource], resource, callback);\n      } else if (resource === this.config.clientId) {\n        // App uses idtoken to send to api endpoints\n        // Default resource is tracked as clientid to store this token\n        this.verbose('renewing idtoken');\n        this._renewIdToken(callback);\n      } else {\n        this._renewToken(resource, callback);\n      }\n    }\n\n    /**\n     * Redirect the Browser to Azure AD Authorization endpoint\n     * @param {string} urlNavigate The authorization request url\n     */\n\n  }, {\n    key: 'promptUser',\n    value: function promptUser(urlNavigate) {\n      if (urlNavigate) {\n        this.info('Navigate to:' + urlNavigate);\n        this.navigate(urlNavigate);\n      } else {\n        this.info('Navigate url is empty');\n      }\n    }\n\n    /**\n     * Clear cache items.\n     */\n\n  }, {\n    key: 'clearCache',\n    value: function clearCache() {\n      this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY, '');\n      this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY, 0);\n      this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, '');\n      this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');\n      this._renewStates = [];\n      this._saveItem(this.CONSTANTS.STORAGE.USERNAME, '');\n      this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, '');\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\n      var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\n\n      if (!this._isEmpty(keys)) {\n        keys = keys.split(this.CONSTANTS.RESOURCE_DELIMETER);\n        for (var i = 0; i < keys.length; i++) {\n          this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + keys[i], '');\n          this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + keys[i], 0);\n        }\n      }\n      this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, '');\n    }\n\n    /**\n     * Clear cache items for a resource.\n     * @param {string} resource The resource\n     */\n\n  }, {\n    key: 'clearCacheForResource',\n    value: function clearCacheForResource(resource) {\n      this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\n      if (this._hasResource(resource)) {\n        this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\n        this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\n      }\n    }\n\n    /**\n     * Logout user will redirect page to logout endpoint.\n     * After logout, it will redirect to post_logout page if provided.\n     */\n\n  }, {\n    key: 'logOut',\n    value: function logOut() {\n      this.clearCache();\n      var logout = '';\n      this._user = null;\n\n      if (this.config.postLogoutRedirectUri) {\n        logout = 'post_logout_redirect_uri=' + encodeURIComponent(this.config.postLogoutRedirectUri);\n      }\n\n      var urlNavigate = this.config.url + 'logout?' + logout;\n      this.info('Logout navigate to: ' + urlNavigate);\n      this.promptUser(urlNavigate);\n    }\n  }, {\n    key: '_isEmpty',\n    value: function _isEmpty(str) {\n      return typeof str === 'undefined' || !str || str.length === 0;\n    }\n\n    /**\n     * Gets a user profile\n     * @param {requestCallback} callback The callback that handles the response.\n     */\n\n  }, {\n    key: 'getUser',\n    value: function getUser(callback) {\n      // IDToken is first call\n      if (typeof callback !== 'function') {\n        throw new Error('callback is not a function');\n      }\n\n      // user in memory\n      if (this._user) {\n        callback(null, this._user);\n        return;\n      }\n\n      // frame is used to get idtoken\n      var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\n      if (this._isEmpty(idtoken)) {\n        this.warn('User information is not available');\n        callback('User information is not available');\n      } else {\n        this.info('User exists in cache: ');\n        this._user = this._createUser(idtoken);\n        callback(null, this._user);\n      }\n    }\n  }, {\n    key: '_addHintParameters',\n    value: function _addHintParameters(urlNavigate) {\n      // include hint params only if upn is present\n      if (this._user && this._user.profile && this._user.profile.hasOwnProperty('upn')) {\n        // add login_hint\n        urlNavigate += '&login_hint=' + encodeURIComponent(this._user.profile.upn);\n\n        // don't add domain_hint twice if user provided it in the extraQueryParameter value\n        if (!this._urlContainsQueryStringParameter('domain_hint', urlNavigate) && this._user.profile.upn.indexOf('@') > -1) {\n          var parts = this._user.profile.upn.split('@');\n          // local part can include @ in quotes. Sending last part handles that.\n          urlNavigate += '&domain_hint=' + encodeURIComponent(parts[parts.length - 1]);\n        }\n      }\n\n      return urlNavigate;\n    }\n  }, {\n    key: '_createUser',\n    value: function _createUser(idToken) {\n      var user = null;\n      var parsedJson = this._extractIdToken(idToken);\n      if (parsedJson && parsedJson.hasOwnProperty('aud')) {\n        var audienceMatch = false;\n\n        if (Array.isArray(parsedJson.aud)) {\n          // If the ID Token contains multiple audiences then an azp claim must be present and equal to the client id.\n          if (parsedJson.hasOwnProperty('azp') && parsedJson.azp.toLowerCase() === this.config.clientId.toLowerCase()) {\n            for (var i = 0; i < parsedJson.aud.length; i++) {\n              if (parsedJson.aud[i].toLowerCase() === this.config.clientId.toLowerCase()) {\n                audienceMatch = true;\n                break;\n              }\n            }\n          }\n        } else {\n          audienceMatch = parsedJson.aud.toLowerCase() === this.config.clientId.toLowerCase();\n        }\n\n        if (audienceMatch) {\n          user = {\n            userName: '',\n            profile: parsedJson\n          };\n\n          if (parsedJson.hasOwnProperty('upn')) {\n            user.userName = parsedJson.upn;\n          } else if (parsedJson.hasOwnProperty('email')) {\n            user.userName = parsedJson.email;\n          } else if (parsedJson.hasOwnProperty('sub')) {\n            user.userName = parsedJson.sub;\n          }\n        } else {\n          this.warn('IdToken has invalid aud/azp field');\n        }\n      }\n\n      return user;\n    }\n  }, {\n    key: '_getHash',\n    value: function _getHash(hash) {\n      var marker = '#' + this.config.hashPrefix + '/';\n      hash = hash.lastIndexOf(marker) > -1 ? hash.substring(hash.lastIndexOf(marker) + this.config.hashPrefix.length + 2) : hash;\n      hash = hash.lastIndexOf('#/') > -1 ? hash.substring(hash.lastIndexOf('#/') + 2) : hash;\n      hash = hash.lastIndexOf('#') > -1 ? hash.substring(hash.lastIndexOf('#') + 1) : hash;\n\n      return hash;\n    }\n  }, {\n    key: '_getSearch',\n    value: function _getSearch(search) {\n      var index = search.indexOf('?');\n      if (index > -1) {\n        search = search.substring(index + 1);\n      }\n\n      return search;\n    }\n  }, {\n    key: '_getParameters',\n    value: function _getParameters(hash, search) {\n      var parameters = {};\n\n      if (hash) {\n        hash = this._getHash(hash);\n        parameters = this._deserialize(hash);\n      }\n\n      if (search) {\n        search = this._getSearch(search);\n        var searchParameters = this._deserialize(search);\n        parameters = this._extend(parameters, searchParameters);\n      }\n\n      return parameters;\n    }\n  }, {\n    key: '_extend',\n    value: function _extend(obj, src) {\n      for (var key in src) {\n        if (src.hasOwnProperty(key)) {\n          obj[key] = src[key];\n        }\n      }\n      return obj;\n    }\n\n    /**\n     * Checks if hash contains access token or id token or error_description\n     * @param {string} hash  -  Hash passed from redirect page\n     * @param {string} search  -  Search passed from redirect page\n     * @return {boolean} exists if all the parameters exist\n     */\n\n  }, {\n    key: 'isCallback',\n    value: function isCallback(hash, search) {\n      var parameters = this._getParameters(hash, search);\n\n      return parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) || parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) || parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN);\n    }\n\n    /**\n     * Gets login error\n     * @return {string} error message related to login\n     */\n\n  }, {\n    key: 'getLoginError',\n    value: function getLoginError() {\n      return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR);\n    }\n\n    /**\n     * Gets requestInfo from given hash.\n     * @param {string} hash  -  Hash passed from redirect page\n     * @param {string} search  -  Search passed from redirect page\n     * @return {string} error message related to login\n     */\n\n  }, {\n    key: 'getRequestInfo',\n    value: function getRequestInfo(hash, search) {\n      var parameters = this._getParameters(hash, search);\n      var requestInfo = {\n        valid: false,\n        parameters: {},\n        stateMatch: false,\n        stateResponse: '',\n        requestType: this.REQUEST_TYPE.UNKNOWN\n      };\n\n      if (parameters) {\n        requestInfo.parameters = parameters;\n        if (parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) || parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) || parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\n          requestInfo.valid = true;\n\n          // which call\n          var stateResponse = '';\n          if (parameters.hasOwnProperty('state')) {\n            this.verbose('State: ' + parameters.state);\n            stateResponse = parameters.state;\n          } else {\n            this.warn('No state returned');\n            return requestInfo;\n          }\n\n          requestInfo.stateResponse = stateResponse;\n\n          // async calls can fire iframe and login request at the same time if developer does not use the API as expected\n          // incoming callback needs to be looked up to find the request type\n          if (stateResponse === this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN)) {\n            requestInfo.requestType = this.REQUEST_TYPE.LOGIN;\n            requestInfo.stateMatch = true;\n            return requestInfo;\n          }\n\n          // external api requests may have many renewtoken requests for different resource\n          if (!requestInfo.stateMatch && window.parent && window.parent.AuthenticationContext) {\n            var statesInParentContext = window.parent.AuthenticationContext._renewStates;\n            for (var i = 0; i < statesInParentContext.length; i++) {\n              if (statesInParentContext[i] === requestInfo.stateResponse) {\n                requestInfo.requestType = this.REQUEST_TYPE.RENEW_TOKEN;\n                requestInfo.stateMatch = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      return requestInfo;\n    }\n  }, {\n    key: '_getResourceFromState',\n    value: function _getResourceFromState(state) {\n      if (state) {\n        var splitIndex = state.indexOf('|');\n        if (splitIndex > -1 && splitIndex + 1 < state.length) {\n          return state.substring(splitIndex + 1);\n        }\n      }\n\n      return '';\n    }\n\n    /**\n     * Saves token from hash that is received from redirect.\n     * @param {string} requestInfo Hash passed from redirect page\n     */\n\n  }, {\n    key: 'saveTokenFromHash',\n    value: function saveTokenFromHash(requestInfo) {\n      this.info('State status:' + requestInfo.stateMatch + '; Request type:' + requestInfo.requestType);\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\n      this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\n\n      var resource = this._getResourceFromState(requestInfo.stateResponse);\n\n      // Record error\n      if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)) {\n        this.info('Error :' + requestInfo.parameters.error + '; Error description:' + requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, requestInfo.parameters.error);\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\n\n        if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\n          this._loginInProgress = false;\n          this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, requestInfo.parameters.error_description);\n        }\n      } else if (requestInfo.stateMatch) {\n        // record tokens to storage if exists\n        this.info('State is right');\n        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)) {\n          this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, requestInfo.parameters[this.CONSTANTS.SESSION_STATE]);\n        }\n\n        var keys = void 0;\n\n        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)) {\n          this.info('Fragment has access token');\n\n          if (!this._hasResource(resource)) {\n            keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\n            this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\n          }\n          // save token with related resource\n          this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ACCESS_TOKEN]);\n          this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._expiresIn(requestInfo.parameters[this.CONSTANTS.EXPIRES_IN]));\n        }\n\n        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\n          this.info('Fragment has id token');\n          this._loginInProgress = false;\n\n          this._user = this._createUser(requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\n\n          if (this._user && this._user.profile) {\n            if (this._user.profile.nonce === this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)) {\n              this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\n\n              // Save idtoken as access token for app itself\n              resource = this.config.loginResource ? this.config.loginResource : this.config.clientId;\n\n              if (!this._hasResource(resource)) {\n                keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\n                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\n              }\n              this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\n              this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._user.profile.exp);\n            } else {\n              this._user = null;\n              this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, 'Nonce is not same as ' + this._idTokenNonce);\n            }\n          } else {\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'invalid id_token');\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\n          }\n        }\n      } else {\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'Invalid_state');\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid_state. state: ' + requestInfo.stateResponse);\n      }\n      this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED);\n    }\n\n    /**\n     * Gets resource for given endpoint if mapping is provided with config.\n     * @param {string} endpoint API endpoint\n     * @return {string} resource for this API endpoint\n     */\n\n  }, {\n    key: 'getResourceForEndpoint',\n    value: function getResourceForEndpoint(endpoint) {\n      if (this.config && this.config.securedEndpoints) {\n        for (var configEndpoint in this.config.securedEndpoints) {\n          // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\n          if (endpoint.indexOf(configEndpoint) > -1) {\n            return this.config.securedEndpoints[configEndpoint];\n          }\n        }\n      }\n\n      // default resource will be clientid if nothing specified\n      // App will use idtoken for calls to itself\n      // check if it's staring from http or https, needs to match with app host\n      if (endpoint.indexOf('http://') > -1 || endpoint.indexOf('https://') > -1) {\n        if (this._getHostFromUri(endpoint) === this._getHostFromUri(this.config.redirectUri)) {\n          return this.config.loginResource;\n        }\n      } else {\n        // in angular level, the url for $http interceptor call could be relative url,\n        // if it's relative call, we'll treat it as app backend call.\n        // if user specified list of anonymous endpoints, no need to send token to these endpoints, return null.\n        if (this.config && this.config.anonymousEndpoints) {\n          for (var i = 0; i < this.config.anonymousEndpoints.length; i++) {\n            if (endpoint.indexOf(this.config.anonymousEndpoints[i]) > -1) {\n              return null;\n            }\n          }\n        }\n        // all other app's backend calls are secured.\n        return this.config.loginResource;\n      }\n\n      // if not the app's own backend or not a domain listed in the endpoints structure\n      return null;\n    }\n  }, {\n    key: '_getHostFromUri',\n    value: function _getHostFromUri(uri) {\n      // remove http:// or https:// from uri\n      var extractedUri = String(uri).replace(/^(https?:)\\/\\//, '');\n\n      extractedUri = extractedUri.split('/')[0];\n      return extractedUri;\n    }\n\n    /* exported  oauth2Callback */\n\n  }, {\n    key: 'handleWindowCallback',\n    value: function handleWindowCallback(hash, search) {\n      // This is for regular javascript usage for redirect handling\n      // need to make sure this is for callback\n      if (!hash) {\n        hash = window.location.hash;\n      }\n\n      if (!search) {\n        search = window.location.search;\n      }\n\n      if (this.isCallback(hash, search)) {\n        var requestInfo = this.getRequestInfo(hash, search);\n        this.info('Returned from redirect url');\n        this.saveTokenFromHash(requestInfo);\n        var callback = null;\n        if (requestInfo.requestType === this.REQUEST_TYPE.RENEW_TOKEN && this.isIframe()) {\n          // iframe call but same single page\n          this.verbose('Window is in iframe');\n          callback = window.parent.AuthenticationContext.callBackMappedToRenewStates[requestInfo.stateResponse];\n          if (callback) {\n            callback(this._getItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION), requestInfo.parameters[this.CONSTANTS.ACCESS_TOKEN] || requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\n          }\n          return;\n        } else if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\n          callback = this.callback;\n          if (callback) {\n            callback(this._getItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION), requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\n          }\n        }\n        // No need to redirect user in case of popup\n        if (!this.popUp) {\n          this.navigate(this._getItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST));\n        }\n      }\n    }\n  }, {\n    key: '_getNavigateUrl',\n    value: function _getNavigateUrl(responseType, resource) {\n      var urlNavigate = this.config.url + 'authorize' + this._serialize(responseType, this.config, resource) + this._addLibMetadata();\n      if (this.config.scope) {\n        urlNavigate += '&scope=' + encodeURIComponent(this.config.scope);\n      }\n      this.info('Navigate url:' + urlNavigate);\n      return urlNavigate;\n    }\n  }, {\n    key: '_extractIdToken',\n    value: function _extractIdToken(encodedIdToken) {\n      // id token will be decoded to get the username\n      var decodedToken = this._decodeJwt(encodedIdToken);\n      if (!decodedToken) {\n        return null;\n      }\n\n      try {\n        var base64IdToken = decodedToken.JWSPayload;\n        var base64Decoded = this._base64DecodeStringUrlSafe(base64IdToken);\n        if (!base64Decoded) {\n          this.info('The returned id_token could not be base64 url safe decoded.');\n          return null;\n        }\n\n        return JSON.parse(base64Decoded);\n      } catch (err) {\n        this.error('The returned id_token could not be decoded', err);\n      }\n\n      return null;\n    }\n  }, {\n    key: '_base64DecodeStringUrlSafe',\n    value: function _base64DecodeStringUrlSafe(base64IdToken) {\n      base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\n      return decodeURIComponent(escape(window.atob(base64IdToken)));\n    }\n\n    // Auth.node js crack function\n\n  }, {\n    key: '_decodeJwt',\n    value: function _decodeJwt(jwtToken) {\n      if (this._isEmpty(jwtToken)) {\n        return null;\n      }\n\n      var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n\n      var matches = idTokenPartsRegex.exec(jwtToken);\n      if (!matches || matches.length < 4) {\n        this.warn('The returned id_token is not parseable.');\n        return null;\n      }\n\n      var crackedToken = {\n        header: matches[1],\n        JWSPayload: matches[2],\n        JWSSig: matches[3]\n      };\n\n      return crackedToken;\n    }\n  }, {\n    key: '_convertUrlSafeToRegularBase64EncodedString',\n    value: function _convertUrlSafeToRegularBase64EncodedString(str) {\n      return str.replace('-', '+').replace('_', '/');\n    }\n  }, {\n    key: '_serialize',\n    value: function _serialize(responseType, obj, resource) {\n      var str = [];\n      if (obj !== null) {\n        str.push('?response_type=' + encodeURIComponent(responseType));\n        str.push('client_id=' + encodeURIComponent(obj.clientId));\n        if (resource) {\n          str.push('resource=' + encodeURIComponent(resource));\n        }\n\n        str.push('redirect_uri=' + encodeURIComponent(obj.redirectUri));\n        str.push('state=' + encodeURIComponent(obj.state));\n\n        if (obj.hasOwnProperty('slice')) {\n          str.push('slice=' + encodeURIComponent(obj.slice));\n        }\n\n        if (obj.hasOwnProperty('extraQueryParameter')) {\n          str.push(obj.extraQueryParameter);\n        }\n\n        var correlationId = obj.correlationId ? obj.correlationId : _uuid2.default.v4();\n        str.push('client-request-id=' + encodeURIComponent(correlationId));\n      }\n\n      return str.join('&');\n    }\n  }, {\n    key: '_deserialize',\n    value: function _deserialize(query) {\n      var pl = /\\+/g; // Regex for replacing addition symbol with a space\n      var search = /([^&=]+)=([^&]*)/g;\n      var decode = function decode(s) {\n        return decodeURIComponent(s.replace(pl, ' '));\n      };\n      var obj = {};\n      var match = search.exec(query);\n      while (match) {\n        obj[decode(match[1])] = decode(match[2]);\n        match = search.exec(query);\n      }\n\n      return obj;\n    }\n  }, {\n    key: '_decimalToHex',\n    value: function _decimalToHex(number) {\n      var hex = number.toString(16);\n      while (hex.length < 2) {\n        hex = '0' + hex;\n      }\n      return hex;\n    }\n  }, {\n    key: '_expiresIn',\n    value: function _expiresIn(expires) {\n      return this._now() + parseInt(expires, 10);\n    }\n  }, {\n    key: '_now',\n    value: function _now() {\n      return Math.round(new Date().getTime() / 1000.0);\n    }\n  }, {\n    key: '_addAuthFrame',\n    value: function _addAuthFrame(iframeId) {\n      if (typeof iframeId === 'undefined') {\n        return;\n      }\n\n      this.info('Add auth frame to document:' + iframeId);\n      var authFrame = document.getElementById(iframeId);\n\n      if (!authFrame) {\n        if (document.createElement && document.documentElement && (window.opera || window.navigator.userAgent.indexOf('MSIE 5.0') === -1)) {\n          var ifr = document.createElement('iframe');\n          ifr.setAttribute('id', iframeId);\n          ifr.style.visibility = 'hidden';\n          ifr.style.position = 'absolute';\n          ifr.style.width = ifr.style.height = ifr.borderWidth = '0px';\n\n          authFrame = document.getElementsByTagName('body')[0].appendChild(ifr);\n        } else if (document.body && document.body.insertAdjacentHTML) {\n          document.body.insertAdjacentHTML('beforeEnd', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\n        }\n        if (window.frames && window.frames[iframeId]) {\n          authFrame = window.frames[iframeId];\n        }\n      }\n\n      return authFrame;\n    }\n  }, {\n    key: '_saveItem',\n    value: function _saveItem(key, obj) {\n      if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\n        if (!this._supportsLocalStorage()) {\n          this.info('Local storage is not supported');\n          return false;\n        }\n\n        localStorage.setItem(key, obj);\n\n        return true;\n      }\n\n      // Default as session storage\n      if (!this._supportsSessionStorage()) {\n        this.info('Session storage is not supported');\n        return false;\n      }\n\n      sessionStorage.setItem(key, obj);\n      return true;\n    }\n  }, {\n    key: '_getItem',\n    value: function _getItem(key) {\n      if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\n        if (!this._supportsLocalStorage()) {\n          this.info('Local storage is not supported');\n          return null;\n        }\n\n        return localStorage.getItem(key);\n      }\n\n      // Default as session storage\n      if (!this._supportsSessionStorage()) {\n        this.info('Session storage is not supported');\n        return null;\n      }\n\n      return sessionStorage.getItem(key);\n    }\n  }, {\n    key: '_supportsLocalStorage',\n    value: function _supportsLocalStorage() {\n      try {\n        return 'localStorage' in window && window.localStorage;\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: '_supportsSessionStorage',\n    value: function _supportsSessionStorage() {\n      try {\n        return 'sessionStorage' in window && window.sessionStorage;\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: '_cloneConfig',\n    value: function _cloneConfig(obj) {\n      if (obj === null || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {\n        return obj;\n      }\n\n      var copy = {};\n      for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) {\n          copy[attr] = obj[attr];\n        }\n      }\n      return copy;\n    }\n  }, {\n    key: '_addLibMetadata',\n    value: function _addLibMetadata() {\n      // x-client-SKU\n      // x-client-Ver\n      return '&x-client-SKU=Js&x-client-Ver=' + this._libVersion();\n    }\n  }, {\n    key: 'log',\n    value: function log(level, message, error) {\n      if (level <= Logging.level) {\n        var timestamp = new Date().toUTCString();\n        var formattedMessage = '';\n\n        if (this.config.correlationId) {\n          formattedMessage = timestamp + ':' + this.config.correlationId + '-' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\n        } else {\n          formattedMessage = timestamp + ':' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\n        }\n\n        if (error) {\n          formattedMessage += '\\nstack:\\n' + error.stack;\n        }\n\n        Logging.log(formattedMessage);\n      }\n    }\n  }, {\n    key: 'error',\n    value: function error(message, _error) {\n      this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, _error);\n    }\n  }, {\n    key: 'warn',\n    value: function warn(message) {\n      this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null);\n    }\n  }, {\n    key: 'info',\n    value: function info(message) {\n      this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null);\n    }\n  }, {\n    key: 'verbose',\n    value: function verbose(message) {\n      this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null);\n    }\n  }, {\n    key: 'navigate',\n    value: function navigate(url) {\n      window.location.replace(url);\n    }\n  }, {\n    key: 'isIframe',\n    value: function isIframe() {\n      return window.parent && window.parent !== window;\n    }\n  }, {\n    key: 'open',\n    value: function open(url, name, features) {\n      return window.open(url, name, features);\n    }\n  }, {\n    key: '_libVersion',\n    value: function _libVersion() {\n      return '1.0.12';\n    }\n  }]);\n\n  return AuthenticationContext;\n}();\n\nexports.default = AuthenticationContext;\n\n\nglobal.Logging = {\n  level: 0,\n  log: function log(message) {}\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../~/webpack/buildin/global.js */ 0)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);
});
